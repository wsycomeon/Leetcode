package com.wsy.nowcoder.huawei.AL_28;

public class Main {


    /**
     * 题目描述
     * 题目描述
     * 若两个正整数的和为素数，则这两个正整数称之为“素数伴侣”，如2和5、6和13，它们能应用于通信加密。现在密码学会请你设计一个程序，从已有的N（N为偶数）个正整数中挑选出若干对组成“素数伴侣”，挑选方案多种多样，例如有4个正整数：2，5，6，13，如果将5和6分为一组中只能得到一组“素数伴侣”，而将2和5、6和13编组将得到两组“素数伴侣”，能组成“素数伴侣”最多的方案称为“最佳方案”，当然密码学会希望你寻找出“最佳方案”。
     *
     * 输入:
     *
     * 有一个正偶数N（N≤100），表示待挑选的自然数的个数。后面给出具体的数字，范围为[2,30000]。
     *
     * 输出:
     *
     * 输出一个整数K，表示你求得的“最佳方案”组成“素数伴侣”的对数。
     *
     *
     *
     * 输入描述:
     * 输入说明
     * 1 输入一个正偶数n
     * 2 输入n个整数
     *
     * 输出描述:
     * 求得的“最佳方案”组成“素数伴侣”的对数。
     *
     * 示例1
     * 输入
     * 复制
     * 4
     * 2 5 6 13
     * 输出
     * 复制
     * 2
     */

    // TODO: 2020-08-24 11:24:47 素数伴侣 --》就是 两个正整数的和 为素数，就是 素数 伴侣！

    // TODO: 2020-08-24 11:46:47 md，好难 --》 匈牙利 算法 ！

    // TODO: 2020-08-24 14:47:42 算了，这种 偏门的 先不看了。
    // https://www.nowcoder.com/practice/b9eae162e02f4f928eac37d7699b352e?tpId=37&&tqId=21251&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking


    /**
     * n 个正整数（偶数），求 素数伴侣 的 最多对数
     *
     * 1、分组
     * n 个数，每俩一组，就是 多少种排序组合，n! --》相当于 排序的个数，天那 --》然后 还要 依次比较 和 是不是 素数。。。
     * 某 和 不是素数，还得 继续 向下 搜索，后面 可能 发现 其他 素数和。。。导致 最后 反而 最大 呢。。
     *
     * 2、判断 是否是 素数 --》只能被 1 和 自身 整除的数字，就是素数
     * 最小的素数 是 2，
     * 从 2 然后 ++ 直到自身 --》看 是否 能被中间的某个数字 整除，能的话，就不是 素数
     *
     * 3、
     *
     */
    public static void main(String[] args) {


    }


}
